{"version":3,"sources":["../../node_modules/superstruct/lib/index.js","../../node_modules/@react-native-firebase/analytics/lib/version.js","../../node_modules/@react-native-firebase/app/lib/common/struct.js","../../node_modules/@react-native-firebase/analytics/lib/structs.js","../../node_modules/@react-native-firebase/analytics/lib/index.js"],"names":["Object","defineProperty","exports","value","StructError","TypeError","attrs","type","path","length","join","JSON","stringify","super","format","data","reason","errors","this","push","Error","captureStackTrace","constructor","stack","toString","prototype","kindOf","val","ctorName","Array","isArray","isBuffer","callee","err","message","indexOf","isArguments","Date","toDateString","getDate","setDate","isDate","stackTraceLimit","isError","RegExp","flags","ignoreCase","multiline","global","isRegexp","throw","return","next","isGeneratorObj","call","slice","toLowerCase","replace","name","isStruct","resolveDefaults","defaults","_extends","assign","target","i","arguments","source","key","hasOwnProperty","Kind","validate","any","schema","defaults$$1","options","tuple","list","func","object","required","endsWith","includes","union","split","intersection","scalar","optional","undefined","en","map","s","e","String","result","isValid","failure","array","element","error","ret","v","r","forEach","singleE","concat","obj","ks","properties","kind","valueKeys","keys","propertiesKeys","Set","types","fn","kinds","k","Math","max","t","Kinds","dict","values","resolved","e2","r2","enum","enums","function","instance","interface","lazy","struct","literal","partial","dynamic","createSchema","Types","superstruct","config","Struct","assert","test","date","isNaN","module","shortDate","match","validateStruct","prefix","validateCompound","a","b","isUndefined","Item","item_brand","item_id","item_name","item_category","item_category2","item_category3","item_category4","item_category5","item_list_id","item_list_name","item_location_id","item_variant","quantity","price","ScreenView","screen_class","screen_name","AddPaymentInfo","items","currency","coupon","payment_type","AddShippingInfo","shipping_tier","AddToCart","AddToWishlist","BeginCheckout","CampaignDetails","medium","campaign","term","content","aclid","cp1","EarnVirtualCurrency","virtual_currency_name","GenerateLead","JoinGroup","group_id","LevelEnd","level","success","LevelStart","LevelUp","character","Login","method","PostScore","score","Refund","affiliation","shipping","tax","transaction_id","Purchase","RemoveFromCart","Search","search_term","number_of_nights","number_of_rooms","number_of_passengers","origin","destination","start_date","end_date","travel_class","SelectContent","content_type","SelectItem","SelectPromotion","creative_name","creative_slot","location_id","promotion_id","promotion_name","SetCheckoutOption","checkout_step","checkout_option","Share","SignUp","SpendVirtualCurrency","UnlockAchievement","achievement_id","ViewCart","ViewItem","ViewItemList","ViewPromotion","ViewSearchResults","ReservedEventNames","FirebaseAnalyticsModule","params","isString","isObject","isOneOf","isAlphaNumericUnderscore","native","logEvent","enabled","isBoolean","setAnalyticsCollectionEnabled","milliseconds","isNumber","setSessionTimeoutDuration","getAppInstanceId","id","isNull","setUserId","setUserProperty","entries","setUserProperties","resetAnalyticsData","structs","setDefaultEventParameters","FirebaseModule","SDK_VERSION","version","firebase","createModuleNamespace","statics","namespace","nativeModuleName","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","getFirebaseRoot"],"mappings":"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","file":"static/js/5.14fef70a.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Define a struct error.\n *\n * @type {StructError}\n */\n\nclass StructError extends TypeError {\n  static format(attrs) {\n    const { type, path, value } = attrs;\n    const message = `Expected a value of type \\`${type}\\`${path.length ? ` for \\`${path.join('.')}\\`` : ''} but received \\`${JSON.stringify(value)}\\`.`;\n    return message;\n  }\n\n  constructor(attrs) {\n    const message = StructError.format(attrs);\n    super(message);\n\n    const { data, path, value, reason, type, errors = [] } = attrs;\n    this.data = data;\n    this.path = path;\n    this.value = value;\n    this.reason = reason;\n    this.type = type;\n    this.errors = errors;\n\n    if (!errors.length) {\n      errors.push(this);\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n\nvar toString = Object.prototype.toString;\n\nvar kindOf = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return val.constructor ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n\n/**\n * A private string to identify structs by.\n *\n * @type {String}\n */\n\nconst IS_STRUCT = '@@__STRUCT__@@';\n\n/**\n * A private string to refer to a struct's kind.\n *\n * @type {String}\n */\n\nconst KIND = '@@__KIND__@@';\n\n/**\n * Check if a `value` is a struct.\n *\n * @param {Any} value\n * @return {Boolean}\n */\n\nfunction isStruct(value) {\n  return !!(value && value[IS_STRUCT]);\n}\n\n/**\n * Resolve `defaults`, for an optional `value`.\n *\n * @param {Function|Any} defaults\n * @param {Any} value\n * @return {Any}\n */\n\nfunction resolveDefaults(defaults, value) {\n  return typeof defaults === 'function' ? defaults(value) : defaults;\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Kind.\n *\n * @type {Kind}\n */\n\nclass Kind {\n  constructor(name, type, validate) {\n    this.name = name;\n    this.type = type;\n    this.validate = validate;\n  }\n}\n\n/**\n * Any.\n *\n * @param {Array|Function|Object|String} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction any(schema, defaults$$1, options) {\n  if (isStruct(schema)) {\n    return schema[KIND];\n  }\n\n  if (schema instanceof Kind) {\n    return schema;\n  }\n\n  switch (kindOf(schema)) {\n    case 'array':\n      {\n        return schema.length > 1 ? tuple(schema, defaults$$1, options) : list(schema, defaults$$1, options);\n      }\n\n    case 'function':\n      {\n        return func(schema, defaults$$1, options);\n      }\n\n    case 'object':\n      {\n        return object(schema, defaults$$1, options);\n      }\n\n    case 'string':\n      {\n        let required = true;\n        let type;\n\n        if (schema.endsWith('?')) {\n          required = false;\n          schema = schema.slice(0, -1);\n        }\n\n        if (schema.includes('|')) {\n          const scalars = schema.split(/\\s*\\|\\s*/g);\n          type = union(scalars, defaults$$1, options);\n        } else if (schema.includes('&')) {\n          const scalars = schema.split(/\\s*&\\s*/g);\n          type = intersection(scalars, defaults$$1, options);\n        } else {\n          type = scalar(schema, defaults$$1, options);\n        }\n\n        if (!required) {\n          type = optional(type, undefined, options);\n        }\n\n        return type;\n      }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(`A schema definition must be an object, array, string or function, but you passed: ${schema}`);\n  } else {\n    throw new Error(`Invalid schema: ${schema}`);\n  }\n}\n\n/**\n * Dict.\n *\n * @param {Array} schema\n * @param {Object} defaults\n * @param {Object} options\n */\n\nfunction dict(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array' || schema.length !== 2) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Dict structs must be defined as an array with two elements, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const obj = scalar('object', undefined, options);\n  const keys = any(schema[0], undefined, options);\n  const values = any(schema[1], undefined, options);\n  const name = 'dict';\n  const type = `dict<${keys.type},${values.type}>`;\n  const validate = value => {\n    const resolved = resolveDefaults(defaults$$1);\n    value = resolved ? _extends({}, resolved, value) : value;\n    const [error] = obj.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    const ret = {};\n    const errors = [];\n\n    for (let k in value) {\n      const v = value[k];\n      const [e, r] = keys.validate(k);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [k].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      k = r;\n      const [e2, r2] = values.validate(v);\n\n      if (e2) {\n        const allE2 = e2.errors || [e2];\n        allE2.forEach(singleE => {\n          singleE.path = [k].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      ret[k] = r2;\n    }\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Enum.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction en(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Enum structs must be defined as an array, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const name = 'enum';\n  const type = schema.map(s => {\n    try {\n      return JSON.stringify(s);\n    } catch (e) {\n      return String(s);\n    }\n  }).join(' | ');\n\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    return schema.includes(value) ? [undefined, value] : [{ data: value, path: [], value, type }];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Enums.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction enums(schema, defaults$$1, options) {\n  const e = en(schema, undefined, options);\n  const l = list([e], defaults$$1, options);\n  return l;\n}\n\n/**\n * Function.\n *\n * @param {Function} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction func(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Function structs must be defined as a function, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const name = 'function';\n  const type = '<function>';\n  const validate = (value = resolveDefaults(defaults$$1), data) => {\n    const result = schema(value, data);\n    let failure = { path: [], reason: null };\n    let isValid;\n\n    switch (kindOf(result)) {\n      case 'boolean':\n        {\n          isValid = result;\n          break;\n        }\n      case 'string':\n        {\n          isValid = false;\n          failure.reason = result;\n          break;\n        }\n      case 'object':\n        {\n          isValid = false;\n          failure = _extends({}, failure, result);\n          break;\n        }\n      default:\n        {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`Validator functions must return a boolean, an error reason string or an error reason object, but you passed: ${schema}`);\n          } else {\n            throw new Error(`Invalid result: ${result}`);\n          }\n        }\n    }\n\n    return isValid ? [undefined, value] : [_extends({ type, value, data: value }, failure)];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Instance.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction instance(schema, defaults$$1, options) {\n  const name = 'instance';\n  const type = `instance<${schema.name}>`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    return value instanceof schema ? [undefined, value] : [{ data: value, path: [], value, type }];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Interface.\n *\n * @param {Object} schema\n * @param {Object} defaults\n * @param {Object} options\n */\n\nfunction inter(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'object') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Interface structs must be defined as an object, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const obj = scalar('object', undefined, options);\n  const ks = [];\n  const properties = {};\n\n  for (const key in schema) {\n    ks.push(key);\n    const s = schema[key];\n    const kind = any(s, undefined, options);\n    properties[key] = kind;\n  }\n\n  const name = 'interface';\n  const type = `{${ks.join()}}`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const [error] = obj.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    const errors = [];\n    const ret = value;\n\n    for (const key in properties) {\n      let v = value[key];\n      const kind = properties[key];\n\n      if (v === undefined) {\n        const d = defaults$$1 && defaults$$1[key];\n        v = resolveDefaults(d, value);\n      }\n\n      const [e, r] = kind.validate(v, value);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [key].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      if (key in value || r !== undefined) {\n        ret[key] = r;\n      }\n    }\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Lazy.\n *\n * @param {Function} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction lazy(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Lazy structs must be defined as an function that returns a schema, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  let kind;\n  let struct;\n  const name = 'lazy';\n  const type = `lazy...`;\n  const compile = value => {\n    struct = schema();\n    kind.name = struct.kind;\n    kind.type = struct.type;\n    kind.validate = struct.validate;\n    return kind.validate(value);\n  };\n\n  kind = new Kind(name, type, compile);\n  return kind;\n}\n\n/**\n * Dynamic.\n *\n * @param {Function} createSchema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction dynamic(createSchema, defaults$$1, options) {\n  if (kindOf(createSchema) !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Dynamic structs must be defined as a function, but you passed: ${createSchema}`);\n    } else {\n      throw new Error(`Invalid schema: ${createSchema}`);\n    }\n  }\n\n  const name = 'dynamic';\n  const type = 'dynamic...';\n  const validate = (value = resolveDefaults(defaults$$1), data) => {\n    const schema = createSchema(value, data);\n\n    if (kindOf(schema) !== 'function') {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(`Dynamic structs must return a schema, but you passed: ${schema}`);\n      } else {\n        throw new Error(`Invalid schema: ${schema}`);\n      }\n    }\n\n    const [error, result] = schema.validate(value);\n\n    if (error) {\n      return [error];\n    }\n\n    return [undefined, result];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * List.\n *\n * @param {Array} schema\n * @param {Array} defaults\n * @param {Object} options\n */\n\nfunction list(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array' || schema.length !== 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`List structs must be defined as an array with a single element, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const array = scalar('array', undefined, options);\n  const element = any(schema[0], undefined, options);\n  const name = 'list';\n  const type = `[${element.type}]`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const [error, result] = array.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    value = result;\n    const errors = [];\n    const ret = [];\n\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      const [e, r] = element.validate(v);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [i].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      ret[i] = r;\n    }\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Literal.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction literal(schema, defaults$$1, options) {\n  const name = 'literal';\n  const type = `literal: ${JSON.stringify(schema)}`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    return value === schema ? [undefined, value] : [{ data: value, path: [], value, type }];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Object.\n *\n * @param {Object} schema\n * @param {Object} defaults\n * @param {Object} options\n */\n\nfunction object(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'object') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Object structs must be defined as an object, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const obj = scalar('object', undefined, options);\n  const ks = [];\n  const properties = {};\n\n  for (const key in schema) {\n    ks.push(key);\n    const s = schema[key];\n    const kind = any(s, undefined, options);\n    properties[key] = kind;\n  }\n\n  const name = 'object';\n  const type = `{${ks.join()}}`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const [error] = obj.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    const errors = [];\n    const ret = {};\n    const valueKeys = Object.keys(value);\n    const propertiesKeys = Object.keys(properties);\n    const keys = new Set(valueKeys.concat(propertiesKeys));\n\n    keys.forEach(key => {\n      let v = value[key];\n      const kind = properties[key];\n\n      if (v === undefined) {\n        const d = defaults$$1 && defaults$$1[key];\n        v = resolveDefaults(d, value);\n      }\n\n      if (!kind) {\n        const e = { data: value, path: [key], value: v };\n        errors.push(e);\n        return;\n      }\n\n      const [e, r] = kind.validate(v, value);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [key].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        return;\n      }\n\n      if (key in value || r !== undefined) {\n        ret[key] = r;\n      }\n    });\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Optional.\n *\n * @param {Any} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction optional(schema, defaults$$1, options) {\n  return union([schema, 'undefined'], defaults$$1, options);\n}\n\n/**\n * Partial.\n *\n * @param {Object} schema\n * @param {Object} defaults\n * @param {Object} options\n */\n\nfunction partial(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'object') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Partial structs must be defined as an object, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const obj = scalar('object', undefined, options);\n  const ks = [];\n  const properties = {};\n\n  for (const key in schema) {\n    ks.push(key);\n    const s = schema[key];\n    const kind = any(s, undefined, options);\n    properties[key] = kind;\n  }\n\n  const name = 'partial';\n  const type = `{${ks.join()},...}`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const [error] = obj.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    const errors = [];\n    const ret = {};\n\n    for (const key in properties) {\n      let v = value[key];\n      const kind = properties[key];\n\n      if (v === undefined) {\n        const d = defaults$$1 && defaults$$1[key];\n        v = resolveDefaults(d, value);\n      }\n\n      const [e, r] = kind.validate(v, value);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [key].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      if (key in value || r !== undefined) {\n        ret[key] = r;\n      }\n    }\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Scalar.\n *\n * @param {String} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction scalar(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Scalar structs must be defined as a string, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const { types } = options;\n  const fn = types[schema];\n\n  if (kindOf(fn) !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`No struct validator function found for type \"${schema}\".`);\n    } else {\n      throw new Error(`Invalid type: ${schema}`);\n    }\n  }\n\n  const kind = func(fn, defaults$$1, options);\n  const name = 'scalar';\n  const type = schema;\n  const validate = value => {\n    const [error, result] = kind.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    return [undefined, result];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Tuple.\n *\n * @param {Array} schema\n * @param {Array} defaults\n * @param {Object} options\n */\n\nfunction tuple(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Tuple structs must be defined as an array, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const kinds = schema.map(s => any(s, undefined, options));\n  const array = scalar('array', undefined, options);\n  const name = 'tuple';\n  const type = `[${kinds.map(k => k.type).join()}]`;\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const [error] = array.validate(value);\n\n    if (error) {\n      error.type = type;\n      return [error];\n    }\n\n    const ret = [];\n    const errors = [];\n    const length = Math.max(value.length, kinds.length);\n\n    for (let i = 0; i < length; i++) {\n      const kind = kinds[i];\n      const v = value[i];\n\n      if (!kind) {\n        const e = { data: value, path: [i], value: v };\n        errors.push(e);\n        continue;\n      }\n\n      const [e, r] = kind.validate(v);\n\n      if (e) {\n        const allE = e.errors || [e];\n        allE.forEach(singleE => {\n          singleE.path = [i].concat(singleE.path);\n          singleE.data = value;\n          errors.push(singleE);\n        });\n        continue;\n      }\n\n      ret[i] = r;\n    }\n\n    return errors.length ? [_extends({}, errors[0], { errors })] : [undefined, ret];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Union.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction union(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Union structs must be defined as an array, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const kinds = schema.map(s => any(s, undefined, options));\n  const name = 'union';\n  const type = kinds.map(k => k.type).join(' | ');\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    const errors = [];\n\n    for (const k of kinds) {\n      const [e, r] = k.validate(value);\n\n      if (!e) {\n        return [undefined, r];\n      }\n\n      errors.push(e);\n    }\n    errors[0].type = type;\n    return errors;\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Intersection.\n *\n * @param {Array} schema\n * @param {Any} defaults\n * @param {Object} options\n */\n\nfunction intersection(schema, defaults$$1, options) {\n  if (kindOf(schema) !== 'array') {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Intersection structs must be defined as an array, but you passed: ${schema}`);\n    } else {\n      throw new Error(`Invalid schema: ${schema}`);\n    }\n  }\n\n  const types = schema.map(s => any(s, undefined, options));\n  const name = 'intersection';\n  const type = types.map(t => t.type).join(' & ');\n  const validate = (value = resolveDefaults(defaults$$1)) => {\n    let v = value;\n\n    for (const t of types) {\n      const [e, r] = t.validate(v);\n\n      if (e) {\n        e.type = type;\n        return [e];\n      }\n\n      v = r;\n    }\n\n    return [undefined, v];\n  };\n\n  return new Kind(name, type, validate);\n}\n\n/**\n * Kinds.\n *\n * @type {Object}\n */\n\nconst Kinds = {\n  any,\n  dict,\n  enum: en,\n  enums,\n  function: func,\n  instance,\n  interface: inter,\n  lazy,\n  list,\n  literal,\n  object,\n  optional,\n  partial,\n  scalar,\n  tuple,\n  union,\n  intersection,\n  dynamic\n\n  /**\n   * Export.\n   *\n   * @type {Object}\n   */\n\n};\n\n/**\n * The types that `kind-of` supports.\n *\n * @type {Array}\n */\n\nconst TYPES = ['arguments', 'array', 'boolean', 'buffer', 'error', 'float32array', 'float64array', 'function', 'generatorfunction', 'int16array', 'int32array', 'int8array', 'map', 'null', 'number', 'object', 'promise', 'regexp', 'set', 'string', 'symbol', 'uint16array', 'uint32array', 'uint8array', 'uint8clampedarray', 'undefined', 'weakmap', 'weakset'];\n\n/**\n * The default types that Superstruct ships with.\n *\n * @type {Object}\n */\n\nconst Types = {\n  any: value => value !== undefined\n};\n\nTYPES.forEach(type => {\n  Types[type] = value => kindOf(value) === type;\n});\n\n/**\n * Handle the 'date' case specially, to throw out invalid `Date` objects.\n *\n * @param {Mixed} value\n * @return {Boolean}\n */\n\nTypes.date = value => kindOf(value) === 'date' && !isNaN(value);\n\n/**\n * Create a struct factory with a `config`.\n *\n * @param {Object} config\n * @return {Function}\n */\n\nfunction superstruct(config = {}) {\n  const types = _extends({}, Types, config.types || {});\n\n  /**\n   * Create a `kind` struct with `schema`, `defaults` and `options`.\n   *\n   * @param {Any} schema\n   * @param {Any} defaults\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function struct(schema, defaults$$1, options = {}) {\n    if (isStruct(schema)) {\n      schema = schema.schema;\n    }\n\n    const kind = Kinds.any(schema, defaults$$1, _extends({}, options, { types }));\n\n    function Struct(data) {\n      if (this instanceof Struct) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('The `Struct` creation function should not be used with the `new` keyword.');\n        } else {\n          throw new Error('Invalid `new` keyword!');\n        }\n      }\n\n      return Struct.assert(data);\n    }\n\n    Object.defineProperty(Struct, IS_STRUCT, { value: true });\n    Object.defineProperty(Struct, KIND, { value: kind });\n\n    Struct.kind = kind.name;\n    Struct.type = kind.type;\n    Struct.schema = schema;\n    Struct.defaults = defaults$$1;\n    Struct.options = options;\n\n    Struct.assert = value => {\n      const [error, result] = kind.validate(value);\n\n      if (error) {\n        throw new StructError(error);\n      }\n\n      return result;\n    };\n\n    Struct.test = value => {\n      const [error] = kind.validate(value);\n      return !error;\n    };\n\n    Struct.validate = value => {\n      const [error, result] = kind.validate(value);\n\n      if (error) {\n        return [new StructError(error)];\n      }\n\n      return [undefined, result];\n    };\n\n    return Struct;\n  }\n\n  /**\n   * Mix in a factory for each specific kind of struct.\n   */\n\n  Object.keys(Kinds).forEach(name => {\n    const kind = Kinds[name];\n\n    struct[name] = (schema, defaults$$1, options) => {\n      const type = kind(schema, defaults$$1, _extends({}, options, { types }));\n      const s = struct(type, defaults$$1, options);\n      return s;\n    };\n  });\n\n  /**\n   * Return the struct factory.\n   */\n\n  return struct;\n}\n\n/**\n * Create a convenience `struct` factory for the default types.\n *\n * @type {Function}\n */\n\nconst struct = superstruct();\n\nexports.struct = struct;\nexports.superstruct = superstruct;\nexports.isStruct = isStruct;\nexports.StructError = StructError;\n//# sourceMappingURL=index.js.map\n","// Generated by genversion.\nmodule.exports = '14.10.0';\n","/*\n *  Copyright (c) 2016-present Invertase Limited & Contributors\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this library except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport { superstruct } from 'superstruct/lib/index';\nimport { isUndefined } from './validate';\n\nexport default superstruct({\n  types: {\n    shortDate: value => typeof value === 'string' && !!value.match(/^\\d{4}-\\d{2}-\\d{2}$/),\n  },\n});\n\nexport const validateStruct = (value = {}, struct, prefix = '') => {\n  try {\n    return struct(value);\n  } catch (e) {\n    const { path, reason } = e;\n    const key = path[0];\n\n    if (reason === undefined) {\n      throw new Error(`${prefix} unknown property '${key}'.`);\n    }\n\n    e.message = `${prefix} ${e.message}`;\n\n    throw e;\n  }\n};\n\nexport const validateCompound = (source = {}, a, b, prefix = '') => {\n  if (\n    (isUndefined(source[a]) && !isUndefined(source[b])) ||\n    (!isUndefined(source[a]) && isUndefined(source[b]))\n  ) {\n    throw new Error(\n      `${prefix} if you supply the '${a}' parameter, you must also supply the '${b}' parameter.`,\n    );\n  }\n};\n","/*\n *  Copyright (c) 2016-present Invertase Limited & Contributors\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this library except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport struct from '@react-native-firebase/app/lib/common/struct';\n\nconst Item = struct({\n  item_brand: 'string?',\n  item_id: 'string?',\n  item_name: 'string?',\n  item_category: 'string?',\n  item_category2: 'string?',\n  item_category3: 'string?',\n  item_category4: 'string?',\n  item_category5: 'string?',\n  item_list_id: 'string?',\n  item_list_name: 'string?',\n  item_location_id: 'string?',\n  item_variant: 'string?',\n  quantity: 'number?',\n  price: 'number?',\n});\n\nexport const ScreenView = struct.interface({\n  screen_class: 'string?',\n  screen_name: 'string?',\n});\n\nexport const AddPaymentInfo = struct({\n  items: struct.optional([Item]),\n  value: 'number?',\n  currency: 'string?',\n  coupon: 'string?',\n  payment_type: 'string?',\n});\n\nexport const AddShippingInfo = struct({\n  items: struct.optional([Item]),\n  value: 'number?',\n  currency: 'string?',\n  coupon: 'string?',\n  shipping_tier: 'string?',\n});\n\nexport const AddToCart = struct({\n  items: struct.optional([Item]),\n  value: 'number?',\n  currency: 'string?',\n});\n\nexport const AddToWishlist = struct({\n  items: struct.optional([Item]),\n  value: 'number?',\n  currency: 'string?',\n});\n\nexport const BeginCheckout = struct({\n  items: struct.optional([Item]),\n  value: 'number?',\n  currency: 'string?',\n  coupon: 'string?',\n});\n\nexport const CampaignDetails = struct({\n  source: 'string',\n  medium: 'string',\n  campaign: 'string',\n  term: 'string?',\n  content: 'string?',\n  aclid: 'string?',\n  cp1: 'string?',\n});\n\nexport const EarnVirtualCurrency = struct({\n  virtual_currency_name: 'string',\n  value: 'number',\n});\n\nexport const GenerateLead = struct({\n  currency: 'string?',\n  value: 'number?',\n});\n\nexport const JoinGroup = struct({\n  group_id: 'string',\n});\n\nexport const LevelEnd = struct({\n  level: 'number',\n  success: 'string?',\n});\n\nexport const LevelStart = struct({\n  level: 'number',\n});\n\nexport const LevelUp = struct({\n  level: 'number',\n  character: 'string?',\n});\n\nexport const Login = struct({\n  method: 'string',\n});\n\nexport const PostScore = struct({\n  score: 'number',\n  level: 'number?',\n  character: 'string?',\n});\n\nexport const Refund = struct({\n  affiliation: 'string?',\n  coupon: 'string?',\n  currency: 'string?',\n  items: struct.optional([Item]),\n  shipping: 'number?',\n  tax: 'number?',\n  value: 'number?',\n  transaction_id: 'string?',\n});\n\nexport const Purchase = struct({\n  affiliation: 'string?',\n  coupon: 'string?',\n  currency: 'string?',\n  items: struct.optional([Item]),\n  shipping: 'number?',\n  tax: 'number?',\n  value: 'number?',\n  transaction_id: 'string?',\n});\n\nexport const RemoveFromCart = struct({\n  currency: 'string?',\n  items: struct.optional([Item]),\n  value: 'number?',\n});\n\nexport const Search = struct({\n  search_term: 'string',\n  number_of_nights: 'number?',\n  number_of_rooms: 'number?',\n  number_of_passengers: 'number?',\n  origin: 'string?',\n  destination: 'string?',\n  start_date: 'shortDate?',\n  end_date: 'shortDate?',\n  travel_class: 'string?',\n});\n\nexport const SelectContent = struct({\n  content_type: 'string',\n  item_id: 'string',\n});\n\nexport const SelectItem = struct({\n  items: struct.optional([Item]),\n  item_list_id: 'string?',\n  item_list_name: 'string?',\n  content_type: 'string?',\n});\n\nexport const SelectPromotion = struct({\n  creative_name: 'string',\n  creative_slot: 'string',\n  items: struct.optional([Item]),\n  location_id: 'string',\n  promotion_id: 'string',\n  promotion_name: 'string',\n});\n\nexport const SetCheckoutOption = struct({\n  checkout_step: 'number',\n  checkout_option: 'string',\n});\n\nexport const Share = struct({\n  content_type: 'string',\n  item_id: 'string',\n  method: 'string',\n});\n\nexport const SignUp = struct({\n  method: 'string',\n});\n\nexport const SpendVirtualCurrency = struct({\n  item_name: 'string',\n  virtual_currency_name: 'string',\n  value: 'number',\n});\n\nexport const UnlockAchievement = struct({\n  achievement_id: 'string',\n});\n\nexport const ViewCart = struct({\n  currency: 'string?',\n  items: struct.optional([Item]),\n  value: 'number?',\n});\n\nexport const ViewItem = struct({\n  currency: 'string?',\n  items: struct.optional([Item]),\n  value: 'number?',\n});\n\nexport const ViewItemList = struct({\n  items: struct.optional([Item]),\n  item_list_id: 'string?',\n  item_list_name: 'string?',\n});\n\nexport const ViewPromotion = struct({\n  items: struct.optional([Item]),\n  location_id: 'string?',\n  creative_name: 'string?',\n  creative_slot: 'string?',\n  promotion_id: 'string?',\n  promotion_name: 'string?',\n});\n\nexport const ViewSearchResults = struct({\n  search_term: 'string',\n});\n","/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isAlphaNumericUnderscore,\n  isNull,\n  isNumber,\n  isObject,\n  isOneOf,\n  isString,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\nimport { validateStruct, validateCompound } from '@react-native-firebase/app/lib/common/struct';\n\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport { isBoolean } from '@react-native-firebase/app/lib/common';\n\nimport version from './version';\nimport * as structs from './structs';\n\nconst ReservedEventNames = [\n  'ad_activeview',\n  'ad_click',\n  'ad_exposure',\n  'ad_impression',\n  'ad_query',\n  'ad_reward',\n  'adunit_exposure',\n  'app_background',\n  'app_clear_data',\n  // 'app_exception',\n  'app_remove',\n  'app_store_refund',\n  'app_store_subscription_cancel',\n  'app_store_subscription_convert',\n  'app_store_subscription_renew',\n  'app_update',\n  'app_upgrade',\n  'dynamic_link_app_open',\n  'dynamic_link_app_update',\n  'dynamic_link_first_open',\n  'error',\n  'first_open',\n  'first_visit',\n  'in_app_purchase',\n  'notification_dismiss',\n  'notification_foreground',\n  'notification_open',\n  'notification_receive',\n  'os_update',\n  'session_start',\n  'session_start_with_rollout',\n  'user_engagement',\n];\n\nconst statics = {};\n\nconst namespace = 'analytics';\n\nconst nativeModuleName = 'RNFBAnalyticsModule';\n\nclass FirebaseAnalyticsModule extends FirebaseModule {\n  logEvent(name, params = {}) {\n    if (!isString(name)) {\n      throw new Error(\"firebase.analytics().logEvent(*) 'name' expected a string value.\");\n    }\n\n    if (!isUndefined(params) && !isObject(params)) {\n      throw new Error(\"firebase.analytics().logEvent(_, *) 'params' expected an object value.\");\n    }\n\n    // check name is not a reserved event name\n    if (isOneOf(name, ReservedEventNames)) {\n      throw new Error(\n        `firebase.analytics().logEvent(*) 'name' the event name '${name}' is reserved and can not be used.`,\n      );\n    }\n\n    // name format validation\n    if (!isAlphaNumericUnderscore(name) || name.length > 40) {\n      throw new Error(\n        `firebase.analytics().logEvent(*) 'name' invalid event name '${name}'. Names should contain 1 to 40 alphanumeric characters or underscores.`,\n      );\n    }\n\n    return this.native.logEvent(name, params);\n  }\n\n  setAnalyticsCollectionEnabled(enabled) {\n    if (!isBoolean(enabled)) {\n      throw new Error(\n        \"firebase.analytics().setAnalyticsCollectionEnabled(*) 'enabled' expected a boolean value.\",\n      );\n    }\n\n    return this.native.setAnalyticsCollectionEnabled(enabled);\n  }\n\n  setSessionTimeoutDuration(milliseconds = 1800000) {\n    if (!isNumber(milliseconds)) {\n      throw new Error(\n        \"firebase.analytics().setSessionTimeoutDuration(*) 'milliseconds' expected a number value.\",\n      );\n    }\n\n    if (milliseconds < 0) {\n      throw new Error(\n        \"firebase.analytics().setSessionTimeoutDuration(*) 'milliseconds' expected a positive number value.\",\n      );\n    }\n\n    return this.native.setSessionTimeoutDuration(milliseconds);\n  }\n\n  getAppInstanceId() {\n    return this.native.getAppInstanceId();\n  }\n\n  setUserId(id) {\n    if (!isNull(id) && !isString(id)) {\n      throw new Error(\"firebase.analytics().setUserId(*) 'id' expected a string value.\");\n    }\n\n    return this.native.setUserId(id);\n  }\n\n  setUserProperty(name, value) {\n    if (!isString(name)) {\n      throw new Error(\"firebase.analytics().setUserProperty(*) 'name' expected a string value.\");\n    }\n\n    if (value !== null && !isString(value)) {\n      throw new Error(\n        \"firebase.analytics().setUserProperty(_, *) 'value' expected a string value.\",\n      );\n    }\n\n    return this.native.setUserProperty(name, value);\n  }\n\n  setUserProperties(properties) {\n    if (!isObject(properties)) {\n      throw new Error(\n        \"firebase.analytics().setUserProperties(*) 'properties' expected an object of key/value pairs.\",\n      );\n    }\n\n    const entries = Object.entries(properties);\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i];\n      if (!isNull(value) && !isString(value)) {\n        throw new Error(\n          `firebase.analytics().setUserProperties(*) 'properties' value for parameter '${key}' is invalid, expected a string.`,\n        );\n      }\n    }\n\n    return this.native.setUserProperties(properties);\n  }\n\n  resetAnalyticsData() {\n    return this.native.resetAnalyticsData();\n  }\n\n  /** -------------------\n   *        EVENTS\n   * -------------------- */\n  logAddPaymentInfo(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logAddPaymentInfo(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logAddPaymentInfo(*):');\n\n    return this.logEvent(\n      'add_payment_info',\n      validateStruct(object, structs.AddPaymentInfo, 'firebase.analytics().logAddPaymentInfo(*):'),\n    );\n  }\n\n  logScreenView(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logScreenView(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'screen_view',\n      validateStruct(object, structs.ScreenView, 'firebase.analytics().logScreenView(*):'),\n    );\n  }\n\n  logAddShippingInfo(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logAddShippingInfo(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logAddShippingInfo(*):');\n\n    return this.logEvent(\n      'add_shipping_info',\n      validateStruct(\n        object,\n        structs.AddShippingInfo,\n        'firebase.analytics().logAddShippingInfo(*):',\n      ),\n    );\n  }\n\n  logAddToCart(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logAddToCart(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logAddToCart(*):');\n\n    return this.logEvent(\n      'add_to_cart',\n      validateStruct(object, structs.AddToCart, 'firebase.analytics().logAddToCart(*):'),\n    );\n  }\n\n  logAddToWishlist(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logAddToWishlist(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logAddToWishlist(*):');\n\n    return this.logEvent(\n      'add_to_wishlist',\n      validateStruct(object, structs.AddToWishlist, 'firebase.analytics().logAddToWishlist(*):'),\n    );\n  }\n\n  logAppOpen() {\n    return this.logEvent('app_open');\n  }\n\n  logBeginCheckout(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logBeginCheckout(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logBeginCheckout(*):');\n\n    return this.logEvent(\n      'begin_checkout',\n      validateStruct(object, structs.BeginCheckout, 'firebase.analytics().logBeginCheckout(*):'),\n    );\n  }\n\n  logCampaignDetails(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logCampaignDetails(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'campaign_details',\n      validateStruct(\n        object,\n        structs.CampaignDetails,\n        'firebase.analytics().logCampaignDetails(*):',\n      ),\n    );\n  }\n\n  logEarnVirtualCurrency(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logEarnVirtualCurrency(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'earn_virtual_currency',\n      validateStruct(\n        object,\n        structs.EarnVirtualCurrency,\n        'firebase.analytics().logEarnVirtualCurrency(*):',\n      ),\n    );\n  }\n\n  logGenerateLead(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logGenerateLead(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logGenerateLead(*):');\n\n    return this.logEvent(\n      'generate_lead',\n      validateStruct(object, structs.GenerateLead, 'firebase.analytics().logGenerateLead(*):'),\n    );\n  }\n\n  logJoinGroup(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logJoinGroup(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'join_group',\n      validateStruct(object, structs.JoinGroup, 'firebase.analytics().logJoinGroup(*):'),\n    );\n  }\n\n  logLevelEnd(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logLevelEnd(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'level_end',\n      validateStruct(object, structs.LevelEnd, 'firebase.analytics().logLevelEnd(*):'),\n    );\n  }\n\n  logLevelStart(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logLevelStart(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'level_start',\n      validateStruct(object, structs.LevelStart, 'firebase.analytics().logLevelStart(*):'),\n    );\n  }\n\n  logLevelUp(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logLevelUp(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'level_up',\n      validateStruct(object, structs.LevelUp, 'firebase.analytics().logLevelUp(*):'),\n    );\n  }\n\n  logLogin(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logLogin(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'login',\n      validateStruct(object, structs.Login, 'firebase.analytics().logLogin(*):'),\n    );\n  }\n\n  logPostScore(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logPostScore(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'post_score',\n      validateStruct(object, structs.PostScore, 'firebase.analytics().logPostScore(*):'),\n    );\n  }\n\n  logSelectContent(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSelectContent(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'select_content',\n      validateStruct(object, structs.SelectContent, 'firebase.analytics().logSelectContent(*):'),\n    );\n  }\n\n  logPurchase(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logPurchase(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logPurchase(*):');\n\n    return this.logEvent(\n      'purchase',\n      validateStruct(object, structs.Purchase, 'firebase.analytics().logPurchaseEvent(*):'),\n    );\n  }\n\n  logRefund(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logRefund(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logRefund(*):');\n\n    return this.logEvent(\n      'refund',\n      validateStruct(object, structs.Refund, 'firebase.analytics().logRefund(*):'),\n    );\n  }\n\n  logRemoveFromCart(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logRemoveFromCart(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logRemoveFromCart(*):');\n\n    return this.logEvent(\n      'remove_from_cart',\n      validateStruct(object, structs.RemoveFromCart, 'firebase.analytics().logRemoveFromCart(*):'),\n    );\n  }\n\n  logSearch(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSearch(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'search',\n      validateStruct(object, structs.Search, 'firebase.analytics().logSearch(*):'),\n    );\n  }\n\n  logSelectItem(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSelectItem(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'select_item',\n      validateStruct(object, structs.SelectItem, 'firebase.analytics().logSelectItem(*):'),\n    );\n  }\n\n  logSetCheckoutOption(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSetCheckoutOption(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'set_checkout_option',\n      validateStruct(\n        object,\n        structs.SetCheckoutOption,\n        'firebase.analytics().logSetCheckoutOption(*):',\n      ),\n    );\n  }\n\n  logSelectPromotion(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSelectPromotion(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'select_promotion',\n      validateStruct(\n        object,\n        structs.SelectPromotion,\n        'firebase.analytics().logSelectPromotion(*):',\n      ),\n    );\n  }\n\n  logShare(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logShare(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'share',\n      validateStruct(object, structs.Share, 'firebase.analytics().logShare(*):'),\n    );\n  }\n\n  logSignUp(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSignUp(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'sign_up',\n      validateStruct(object, structs.SignUp, 'firebase.analytics().logSignUp(*):'),\n    );\n  }\n\n  logSpendVirtualCurrency(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logSpendVirtualCurrency(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'spend_virtual_currency',\n      validateStruct(\n        object,\n        structs.SpendVirtualCurrency,\n        'firebase.analytics().logSpendVirtualCurrency(*):',\n      ),\n    );\n  }\n\n  logTutorialBegin() {\n    return this.logEvent('tutorial_begin');\n  }\n\n  logTutorialComplete() {\n    return this.logEvent('tutorial_complete');\n  }\n\n  logUnlockAchievement(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logUnlockAchievement(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'unlock_achievement',\n      validateStruct(\n        object,\n        structs.UnlockAchievement,\n        'firebase.analytics().logUnlockAchievement(*):',\n      ),\n    );\n  }\n\n  logViewCart(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logViewCart(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logViewCart(*):');\n\n    return this.logEvent(\n      'view_cart',\n      validateStruct(object, structs.ViewCart, 'firebase.analytics().logViewCart(*):'),\n    );\n  }\n\n  logViewItem(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logViewItem(*): The supplied arg must be an object of key/values.',\n      );\n    }\n    validateCompound(object, 'value', 'currency', 'firebase.analytics().logViewItem(*):');\n\n    return this.logEvent(\n      'view_item',\n      validateStruct(object, structs.ViewItem, 'firebase.analytics().logViewItem(*):'),\n    );\n  }\n\n  logViewItemList(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logViewItemList(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'view_item_list',\n      validateStruct(object, structs.ViewItemList, 'firebase.analytics().logViewItemList(*):'),\n    );\n  }\n\n  logViewPromotion(object = {}) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logViewPromotion(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'view_promotion',\n      validateStruct(object, structs.ViewPromotion, 'firebase.analytics().logViewPromotion(*):'),\n    );\n  }\n  /**\n   * Unsupported in \"Enhanced Ecommerce reports\":\n   * https://firebase.google.com/docs/reference/android/com/google/firebase/analytics/FirebaseAnalytics.Event#public-static-final-string-view_search_results\n   */\n  logViewSearchResults(object) {\n    if (!isObject(object)) {\n      throw new Error(\n        'firebase.analytics().logViewSearchResults(*): The supplied arg must be an object of key/values.',\n      );\n    }\n\n    return this.logEvent(\n      'view_search_results',\n      validateStruct(\n        object,\n        structs.ViewSearchResults,\n        'firebase.analytics().logViewSearchResults(*):',\n      ),\n    );\n  }\n\n  setDefaultEventParameters(params) {\n    if (!isObject(params) && !isNull(params) && !isUndefined(params)) {\n      throw new Error(\n        \"firebase.analytics().setDefaultEventParameters(*) 'params' expected an object value when it is defined.\",\n      );\n    }\n\n    return this.native.setDefaultEventParameters(params);\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/analytics';\nexport const SDK_VERSION = version;\n\n// import analytics from '@react-native-firebase/analytics';\n// analytics().logEvent(...);\nexport default createModuleNamespace({\n  statics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: false,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAnalyticsModule,\n});\n\n// import analytics, { firebase } from '@react-native-firebase/analytics';\n// analytics().logEvent(...);\n// firebase.analytics().logEvent(...);\nexport const firebase = getFirebaseRoot();\n"],"sourceRoot":""}